document.addEventListener('DOMContentLoaded', function() {
    console.log("JavaScript is running!");

    // Define the API endpoints with full URLs
    const airQualityEndpoint = 'http://localhost:5000/api/current-air-quality';
    const smogPredictionEndpoint = 'http://localhost:5000/api/smog-prediction';

    // Fetch and display air quality data
    fetch(airQualityEndpoint)
        .then(response => {
            console.log('Response Status (Air Quality):', response.status);
            return response.json();
        })
        .then(data => {
            // Assuming you have elements with these IDs to display data
            document.getElementById('temperature').textContent = data.temperature + ' °C';
            document.getElementById('humidity').textContent = data.humidity + ' %';
            document.getElementById('pm25').textContent = data.pm25 + ' µg/m³';
            document.getElementById('co2').textContent = data.co2 + ' ppm';
        })
        .catch(error => {
            console.error('Error fetching air quality data:', error);
        });

    // Fetch and display smog prediction
    fetch(smogPredictionEndpoint, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        // Adjust the payload based on the expected format in your Flask app
        body: JSON.stringify({
            temperature: 22.5,
            humidity: 65,
            pm25: 15,
            co2: 400,
            humidityTempIndex: 22.5 * 65  // Adjust the value based on your calculation
        }),
    })
        .then(response => {
            console.log('Response Status (Smog Prediction):', response.status);
            return response.json();
        })
        .then(data => {
            // Assuming you have elements with these IDs to display data
            document.getElementById('smog_prediction').textContent = data.numeric_prediction;  // Assuming numeric prediction
            document.getElementById('recommendation').textContent = data.recommendation;
        })
        .catch(error => {
            console.error('Error fetching smog prediction:', error);
        });
});